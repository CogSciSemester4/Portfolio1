---
title: "Computational Modeling - Assignment 1"
author: "Riccardo Fusaroli"
date: "07/01/2021"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## In this assignment we learn how to assess rates from a binomial distribution, using the case of assessing your teachers' knowledge of CogSci

N.B. this markdown has 2 parts as it spans 2 weeks of teaching

### First part

You want to assess your teachers' knowledge of cognitive science. "These guys are a bunch of drama(turgist) queens, mindless philosophers, chattering communication people and Russian spies. Do they really know CogSci?", you think.

To keep things simple (your teachers should not be faced with too complicated things):
- You created a pool of equally challenging questions on CogSci
- Each question can be answered correctly or not (we don't allow partially correct answers, to make our life simpler).
- Knowledge of CogSci can be measured on a scale from 0 (negative knowledge, all answers wrong) through 0.5 (random chance) to 1 (awesome CogSci superpowers)

This is the data:
- Riccardo: 3 correct answers out of 6 questions
- Kristian: 2 correct answers out of 2 questions (then he gets bored)
- Daina: 160 correct answers out of 198 questions (Daina never gets bored)
- Mikkel: 66 correct answers out of 132 questions

Questions:

1. What's Riccardo's estimated knowledge of CogSci? What is the probability he knows more than chance (0.5) [try figuring this out. if you can't peek into chapters 3.1 and 3.2 and/or the slides]?
- First implement a grid approximation (hint check paragraph 2.4.1!) with a uniform prior, calculate the posterior and plot the results
- Then implement a quadratic approximation (hint check paragraph 2.4.2!).
- N.B. for the rest of the exercise just keep using the grid approximation (we'll move to quadratic approximations in two classes)

```{r}
#Loading packages
install.packages("pacman")
pacman::p_load("rethinking", "tidyverse")
#Defining the grid 
dens <- 20
p_grid <- seq(from = 0 , to = 1 , length.out = dens)

#Define the prior
#prior <- rep( 1 , dens ) # Flat 
#prior <- ifelse(p_grid < 0.5 , 0 , 1) # UnreasonablyOptimisticPrior
prior <- dnorm(p_grid, 0.5, 0.1) # SensiblyCenteredAtChance, sd = 0.1

#Test the prior (does it look crazy?)
#dens(rbinom(1e4, 6, runif(1e4, 0, 1)))
#dens(rbinom(1e4, 6, runif(1e4, 0.5, 1)))
#dens(rbinom(1e4, 6, rnorm(1e4, 0.5, 0.1))) 
#Compute the likelihood at each value in grid
likelihood <- dbinom( 3 , size = 6 , prob = p_grid )
#Compute the posterior (likelihood by prior)
unstd.posterior <- likelihood * ricprior
#Standardize the posterior (so it sums to 1)
ricposterior <- unstd.posterior / sum(unstd.posterior)
#Draw the plot
d <- data.frame(grid = p_grid, posterior = ricposterior, prior = ricprior, likelihood = likelihood)

ggplot(d, aes(grid,posterior)) +  geom_point() +geom_line()+theme_classic()+  geom_line(aes(grid, prior/dens),color= 'red')+xlab("Knowledge of CogSci")+ ylab("posterior probability")

#Probability that Riccardo does better than chance in the cognitive science questionnaire
sum(ricposterior[p_grid > 0.5]) #50%

#Quadratic approximation 
ricquad <- quap(
    alist(
        C ~ dbinom( C+I ,p) ,  # binomial likelihood
        p ~ dunif(0,1)     # uniform prior
), data=list(C=3, I=3) )
#display of the quadratic approximation
precis(ricquad)
#Assuming the posterior is Gaussian, it is maximized at 0.5, and its standard deviation is 0.2.

#Analytical calculation:
W <- 3
L <- 3
curve( dbeta( x , W+1 , L+1 ) , from=0 , to=1)
#Quadratic approximation
curve( dnorm( x , 0.5 , 0.2 ) , lty=2 , add=TRUE )
```


2. Estimate all the teachers' knowledge of CogSci. Who's best? Use grid approximation. Comment on the posteriors of Riccardo and Mikkel.
2a. Produce plots of the prior, and posterior for each teacher.

- Kristian: 2 correct answers out of 2 questions (then he gets bored)
- Daina: 160 correct answers out of 198 questions (Daina never gets bored)
- Mikkel: 66 correct answers out of 132 questions

```{r}
## Kristian's knowledge of Cognitive Science
#grid and density remain the same values
#using the same prior values as before:
prior <- dnorm(p_grid, 0.5, 0.1) # SensiblyCenteredAtChance, sd = 0.1
kristianlikelihood <- dbinom(2, size = 2, prob = p_grid) #likelihood
kristianunstd.posterior <- kristianlikelihood * prior #product
kristianposterior <- kristianunstd.posterior / sum(kristianunstd.posterior) #standardizing so it sums to 1
d1 <- data.frame(grid = p_grid, posterior = kristianposterior, prior = prior, likelihood = kristianlikelihood)
ggplot(d, aes(p_grid,kristianposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, prior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
d1
#Probability that Kristian does better than chance in the cognitive science questionnaire
sum(kristianposterior[p_grid > 0.5]) #65% probability that Kristian Tylén knows more than chance
```

```{r}
## Daina's knowledge of Cognitive science
#grid, prior and density remain the same values

dlikelihood <- dbinom(160, size = 198, prob = p_grid) 
dunstd.posterior <- dlikelihood * prior 
dposterior <- dunstd.posterior / sum(dunstd.posterior) 
d2 <- data.frame(grid = p_grid, posterior = dposterior, prior = prior, likelihood = dlikelihood)
ggplot(d2, aes(p_grid,dposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, prior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
#Probability that Daina knows more than chance:
sum(dposterior[p_grid > 0.5]) #100% probability that Daina Crafa knows more than chance
```
```{r}
## Mikkel's knowledge of Cognitive science
#grid, prior and density remain the same values
mlikelihood <- dbinom(66, size = 132, prob = p_grid) 
munstd.posterior <- mlikelihood * prior 
mposterior <- munstd.posterior / sum(munstd.posterior) 
d3 <- data.frame(grid = p_grid, posterior = mposterior, prior = prior, likelihood = mlikelihood)
ggplot(d3, aes(p_grid,mposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, prior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
#Probability that mikkel knows more than chance:
sum(mposterior[p_grid > 0.5]) #50% probability that Mikkel knows more than chance
```
Comment on the posteriors of Riccardo and Mikkel: 

3. Change the prior. Given your teachers have all CogSci jobs, you should start with a higher appreciation of their knowledge: the prior is a normal distribution with a mean of 0.8 and a standard deviation of 0.2. Do the results change (and if so how)?
3a. Produce plots of the prior and posterior for each teacher.

```{r}
### New prior
## Riccardo's knowledge of Cognitive Science
#grid and density remain the same values
#changing prior values:
newprior <- dnorm(p_grid, 0.8, 0.2) 
newriclikelihood <- dbinom(3, size = 6, prob = p_grid) #likelihood
newricunstd.posterior <- newriclikelihood * newprior #product
newricposterior <- newricunstd.posterior / sum(newricunstd.posterior) #standardizing so it sums to 1
d10 <- data.frame(grid = p_grid, posterior = newricposterior, prior = newprior, likelihood = newriclikelihood)
ggplot(d10, aes(p_grid,newricposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, newprior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
#Probability that Riccardo does better than chance in the cognitive science questionnaire
sum(newricposterior[p_grid > 0.5]) #84% probability that Riccardo knows more than chance. This must be based primarily on the prior as the only 50% of the questions in the observed data is correctly answered

## Kristian's knowledge of Cognitive Science
#grid and density remain the same values
#using newprior values:
newkristianlikelihood <- dbinom(2, size = 2, prob = p_grid) #likelihood
newkristianunstd.posterior <- newkristianlikelihood * newprior #product
newkristianposterior <- newkristianunstd.posterior / sum(newkristianunstd.posterior) #standardizing so it sums to 1
d11 <- data.frame(grid = p_grid, posterior = newkristianposterior, prior = newprior, likelihood = newkristianlikelihood)
ggplot(d11, aes(p_grid,newkristianposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, newprior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
#Probability that Kristian does better than chance in the cognitive science questionnaire
sum(newkristianposterior[p_grid > 0.5]) #98% probability that Kristian Tylén knows more than chance

## Daina's knowledge of Cognitive science
#grid, prior and density remain the same values
#using newprior values:
newdlikelihood <- dbinom(160, size = 198, prob = p_grid) 
newdunstd.posterior <- newdlikelihood * newprior 
newdposterior <- newdunstd.posterior / sum(newdunstd.posterior) 
d12 <- data.frame(grid = p_grid, posterior = newdposterior, prior = newprior, likelihood = newdlikelihood)
ggplot(d12, aes(p_grid,newdposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, newprior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
#Probability that Daina knows more than chance:
sum(newdposterior[p_grid > 0.5]) #100% probability that Daina Crafa knows more than chance

## Mikkel's knowledge of Cognitive science
#grid, prior and density remain the same values
newmlikelihood <- dbinom(66, size = 132, prob = p_grid) 
newmunstd.posterior <- newmlikelihood * newprior 
newmposterior <- newmunstd.posterior / sum(newmunstd.posterior) 
d13 <- data.frame(grid = p_grid, posterior = newmposterior, prior = newprior, likelihood = newmlikelihood)
ggplot(d13, aes(p_grid,newmposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, newprior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
#Probability that mikkel knows more than chance:
sum(newmposterior[p_grid > 0.5]) #63% probability that Mikkel knows more than chance
```

4. You go back to your teachers and collect more data (multiply the previous numbers by 100). Calculate their knowledge with both a uniform prior and a normal prior with a mean of 0.8 and a standard deviation of 0.2. Do you still see a difference between the results? Why?

```{r}
#Bigger data samples
## Riccardo's knowledge of Cognitive Science
#grid, prior and density remain the same values
#However, sample is multiplied by 100
extriclikelihood <- dbinom(300, size = 600, prob = p_grid) #likelihood
extricunstd.posterior <- extriclikelihood * newprior #product
extricposterior <- extricunstd.posterior / sum(extricunstd.posterior) #standardizing so it sums to 1
d20 <- data.frame(grid = p_grid, posterior = extricposterior, prior = newprior, likelihood = extriclikelihood)
ggplot(d20, aes(p_grid,extricposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, newprior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
#Probability that Riccardo does better than chance in the cognitive science questionnaire
sum(extricposterior[p_grid > 0.5]) #Now there is only 60% chance because of the bigger samplesize interferes more with the prior probabilities

## Kristian's knowledge of Cognitive Science
#grid and density remain the same values
#using newprior values and multiplying data by 100
extkristianlikelihood <- dbinom(200, size = 200, prob = p_grid) #likelihood
extkristianunstd.posterior <- extkristianlikelihood * newprior #product
extkristianposterior <- extkristianunstd.posterior / sum(extkristianunstd.posterior) #standardizing so it sums to 1
d21 <- data.frame(grid = p_grid, posterior = extkristianposterior, prior = newprior, likelihood = extkristianlikelihood)
ggplot(d21, aes(p_grid,extkristianposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, newprior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
#Probability that Kristian does better than chance in the cognitive science questionnaire
sum(extkristianposterior[p_grid > 0.5]) #100% probability that Kristian Tylén knows more than chance


## Daina's knowledge of Cognitive science
#grid, prior and density remain the same values
#using newprior values and multiplying data by 100
extdlikelihood <- dbinom(16000, size = 19800, prob = p_grid) 
extdunstd.posterior <- newdlikelihood * newprior 
extdposterior <- extdunstd.posterior / sum(extdunstd.posterior) 
d22 <- data.frame(grid = p_grid, posterior = extdposterior, prior = newprior, likelihood = extdlikelihood)
ggplot(d22, aes(p_grid,extdposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, newprior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
#Probability that Daina knows more than chance:
sum(extdposterior[p_grid > 0.5]) #100% probability that Daina Crafa knows more than chance


## Mikkel's knowledge of Cognitive science
#grid, prior and density remain the same values. Data is multiplied by 100
extmlikelihood <- dbinom(6600, size = 13200, prob = p_grid) 
extmunstd.posterior <- extmlikelihood * newprior 
extmposterior <- extmunstd.posterior / sum(extmunstd.posterior) 
d23 <- data.frame(grid = p_grid, posterior = extmposterior, prior = newprior, likelihood = extmlikelihood)
ggplot(d23, aes(p_grid,extmposterior)) +geom_point() +geom_line()+theme_classic()+  geom_line(aes(p_grid, newprior/dens),color= 'red')+  xlab("Knowledge of CogSci") + ylab("posterior probability")
#Probability that mikkel knows more than chance:
sum(extmposterior[p_grid > 0.5]) #60% probability that Mikkel knows more than chance

```


5. Imagine you're a skeptic and think your teachers do not know anything about CogSci, given the content of their classes. How would you operationalize that belief?

Set the prior very low. Around 0.2 maybe or even lower

6. Optional question: Can you estimate the difference between Riccardo's estimated knowledge and that of each of the other teachers? Would you deem it credible (that is, would you believe that it is actually different)?
```

### Second part: Focusing on predictions

Last year you assessed the teachers (darned time runs quick!). Now you want to re-test them and assess whether your models are producing reliable predictions. In Methods 3 we learned how to do machine-learning style assessment of predictions (e.g. rmse on testing datasets). Bayesian stats makes things a bit more complicated. So we'll try out how that works. N.B. You can choose which prior to use for the analysis of last year's data.

Questions to be answered (but see guidance below):
1- Write a paragraph discussing how assessment of prediction performance is different in Bayesian vs. frequentist models
2- Provide at least one plot and one written line discussing prediction errors for each of the teachers.

This is the old data:
- Riccardo: 3 correct answers out of 6 questions
- Kristian: 2 correct answers out of 2 questions (then he gets bored)
- Daina: 160 correct answers out of 198 questions (Daina never gets bored)
- Mikkel: 66 correct answers out of 132 questions

This is the new data:
- Riccardo: 9 correct answers out of 10 questions (then he freaks out about teaching preparation and leaves)
- Kristian: 8 correct answers out of 12 questions
- Daina: 148 correct answers out of 172 questions (again, Daina never gets bored)
- Mikkel: 34 correct answers out of 65 questions

Guidance Tips

1. There are at least two ways of assessing predictions.
2. Last year's results are this year's expectations.
3. Are the parameter estimates changing? (way 1)
4. How does the new data look in last year's predictive posterior? (way 2)
